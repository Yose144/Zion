version: '3.8'

# Production docker-compose for Hetzner Cloud deployment
# Use with: docker-compose -f docker-compose.prod.yml up -d

services:
  # Main pool server with public access
  pool:
    image: zion:latest  # Or ghcr.io/yose144/zion:latest after CI/CD setup
    container_name: zion-pool
    environment:
      - ZION_MODE=pool
      - POOL_PORT=3333
      - POOL_DIFFICULTY=1000
      - POOL_FEE=1
      - ZION_LOG_LEVEL=info
      # Add your seed nodes here
      - SEED_NODES='"95.216.1.2:18081", "95.216.1.3:18081"'
    volumes:
      - ./data/pool:/home/zion/.zion
      - ./logs/pool:/var/log/zion
    ports:
      - "3333:3333"    # Pool stratum port - PUBLIC
      - "18080:18080"  # RPC port - consider using firewall/nginx
      - "18081:18081"  # P2P port - PUBLIC
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Nginx reverse proxy for RPC (optional but recommended)
  nginx:
    image: nginx:alpine
    container_name: zion-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Add SSL certificates here
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - pool
    restart: always
    profiles:
      - web  # Only starts with --profile web

  # Monitoring with Prometheus node exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: zion-node-exporter
    ports:
      - "9100:9100"
    restart: always
    profiles:
      - monitoring  # Only starts with --profile monitoring

  # Log aggregation with Loki (optional)
  loki:
    image: grafana/loki:latest
    container_name: zion-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    restart: always
    profiles:
      - monitoring

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: zion-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    restart: always
    profiles:
      - monitoring

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: zion-network
    driver: bridge